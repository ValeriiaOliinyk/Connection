{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","box","protoTypes","PropTypes","node","isRequired","string","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","filter","connect","state","value","contacts","dispatch","onChange","e","contactsActions","target","label","type","input","placeholder","ContactForm","updateContacts","setState","reset","getSameName","props","some","contact","trim","handleSubmit","preventDefault","alert","onSubmit","this","form","button","Component","phonebookActions","Contact","onDeleteContact","text","onClick","ContactList","list","map","key","item","getVisibleContacts","allContacts","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","length","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactspersistConfig","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7d9242fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1QBWj\",\"input\":\"ContactForm_input__2zBDb\",\"form\":\"ContactForm_form__3yj5u\",\"button\":\"ContactForm_button__2BTdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__WkuvV\",\"box\":\"Section_box__1XYwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1-4vs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__2TbIY\",\"text\":\"Contact_text__19EIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__5Tkrm\",\"item\":\"ContactList_item__10sJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1oGIF\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children, title }) => (\n  <>\n    <h2 className={styles.title}>{title}</h2>\n    <div className={styles.box}>{children}</div>\n  </>\n);\n\nSection.protoTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortId from \"shortid\";\r\n\r\nconst addContact = createAction(\"phonebook/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortId.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"phonebook/delete\");\r\nconst filter = createAction(\"phonebook/change\");\r\n\r\nexport default { addContact, deleteContact, filter };\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <br />\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={styles.input}\n      placeholder=\"Type name... \"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebook-actions\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  updateContacts = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  getSameName = (name) => {\n    const { contacts } = this.props;\n    return contacts.some((contact) => contact.name === name.trim());\n  };\n\n  handleSubmit = (e) => {\n    const { number, name } = this.state;\n    e.preventDefault();\n\n    if (name === \"\") {\n      alert(`Add name please!`);\n      this.reset();\n      return;\n    }\n\n    if (this.getSameName(name)) {\n      alert(`${name.trim()} is already in contacts`);\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label>\n          Name <br />\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type name... \"\n          />\n        </label>\n        <label className={styles.label}>\n          Number <br />\n          <input\n            type=\"text\"\n            value={number}\n            name=\"number\"\n            onChange={this.updateContacts}\n            className={styles.input}\n            placeholder=\"Type number... \"\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"./Contact.module.css\";\n\nconst Contact = ({ name, number, onDeleteContact }) => (\n  <>\n    <p className={styles.text}>\n      {name}: {number}\n    </p>\n    <button onClick={onDeleteContact} className={styles.button}>\n      Delete\n    </button>\n  </>\n);\n\nexport default Contact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Contact from \"../Contact\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={styles.item}>\n        <Contact\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n          id={id}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/phonebook/phonebook-actions\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: getVisibleContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","// Base\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\n// Components\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\n\nconst App = ({ contacts }) => {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length >= 2 && <Filter />}\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts: contacts,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactspersistConfig = {\r\n  key: \"contatcs\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactspersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}